version: '3.3'  

services:  

  elasticsearch:
    image: 'matterslab/elasticsearch:latest'
    build:
      context: ./
      dockerfile: ./Dockerfile
    environment:
      # https://github.com/docker/swarmkit/issues/1951
      - node.name={{.Node.Hostname}}
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=${INITIAL_MASTER_NODES:-node1}
      - cluster.name=docker-cluster
      - network.host=0.0.0.0
    networks:
      - elastic
    volumes:
      - esdata:/usr/share/elasticsearch/data
    deploy:
      mode: 'global'
      endpoint_mode: dnsrr
  
  nginx:
    image: 'nginx:1'
    networks:
      - elastic
    ports:
      - '9200:9200'
    command: |
      /bin/bash -c "echo '
      server {
        listen 9200;
        add_header X-Frame-Options "SAMEORIGIN";
        client_max_body_size 0;
        location / {
            proxy_pass http://elasticsearch:9200;
            proxy_http_version 1.1;
            proxy_set_header Connection keep-alive;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_cache_bypass $$http_upgrade;
        }
      }' | tee /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    deploy:
      mode: 'global'
  
  visualizer:
    image: dockersamples/visualizer:stable
    networks:
      - elastic
    ports:
      - '8080:8080'
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: 
          - node.role == manager

networks:
  elastic:
    external: true

volumes:
  esdata:
